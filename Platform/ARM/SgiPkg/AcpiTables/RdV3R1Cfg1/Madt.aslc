/** @file
* Multiple APIC Description Table (MADT)
*
* The MADT table provides OSPM with information necessary for operation on
* systems with Generic interrupt controller (GIC). The information about the GIC
* CPU interface, redistributor, distributor and ITS blocks on the RD-V3-R1-CFG1
* platform is included in this table.
*
* Copyright (c) 2025, Arm Limited. All rights reserved.
*
* SPDX-License-Identifier: BSD-2-Clause-Patent
*
* @par Specification Reference:
*   - ACPI 6.4, Chapter 5, Section 5.2.12, Multiple APIC Description Table
**/

#include <Library/AcpiLib.h>
#include <Library/ArmLib.h>
#include <Library/PcdLib.h>

#include "SgiAcpiHeader.h"
#include "SgiPlatform.h"

#define CORE_CNT   (FixedPcdGet32 (PcdClusterCount) * \
                      FixedPcdGet32 (PcdCoreCount))
#define CHIP_CNT   (FixedPcdGet32 (PcdChipCount))

// Multiple APIC Description Table
#pragma pack (1)

typedef struct {
  EFI_ACPI_6_4_MULTIPLE_APIC_DESCRIPTION_TABLE_HEADER   Header;
  EFI_ACPI_6_4_GIC_STRUCTURE                            GicInterfaces[CORE_CNT * CHIP_CNT];
  EFI_ACPI_6_4_GIC_DISTRIBUTOR_STRUCTURE                GicDistributor;
  EFI_ACPI_6_4_GICR_STRUCTURE                           GicRedistributor[CHIP_CNT];
  EFI_ACPI_6_4_GIC_ITS_STRUCTURE                        GicIts[12];
} EFI_ACPI_6_4_MULTIPLE_APIC_DESCRIPTION_TABLE;

#pragma pack ()

STATIC EFI_ACPI_6_4_MULTIPLE_APIC_DESCRIPTION_TABLE Madt = {
  {
    ARM_ACPI_HEADER (
      EFI_ACPI_6_4_MULTIPLE_APIC_DESCRIPTION_TABLE_SIGNATURE,
      EFI_ACPI_6_4_MULTIPLE_APIC_DESCRIPTION_TABLE,
      EFI_ACPI_6_4_MULTIPLE_APIC_DESCRIPTION_TABLE_REVISION
    ),
    // MADT specific fields
    0, // LocalApicAddress
    0  // Flags
  },
  {
    // Format: EFI_ACPI_6_4_GICC_STRUCTURE_INIT(GicId, AcpiCpuUid, Mpidr, Flags,
    //                                          PmuIrq, GicBase, GicVBase,
    //                                          GicHBase, GsivId, GicRBase,
    //                                          Efficiency,
    //                                          SpeOverflowInterrupt)
    // Note: The GIC Structure of the primary CPU must be the first entry
    // (see chapter 5.2.12.14 GICC Structure of ACPI v6.4).

    // Chip 0
    EFI_ACPI_6_4_GICC_STRUCTURE_INIT( // Neoverse Poseidon core0
      0, 0, GET_MPID(0x0, 0x0), EFI_ACPI_6_4_GIC_ENABLED, 23,
      0, 0, 0, 25, 0, 0, 0),
    EFI_ACPI_6_4_GICC_STRUCTURE_INIT( // Neoverse Poseidon core1
      0, 1, GET_MPID(0x100, 0x0), EFI_ACPI_6_4_GIC_ENABLED, 23,
      0, 0, 0, 25, 0, 0, 0),
    EFI_ACPI_6_4_GICC_STRUCTURE_INIT( // Neoverse Poseidon core2
      0, 2, GET_MPID(0x200, 0x0), EFI_ACPI_6_4_GIC_ENABLED, 23,
      0, 0, 0, 25, 0, 0, 0),
    EFI_ACPI_6_4_GICC_STRUCTURE_INIT( // Neoverse Poseidon core3
      0, 3, GET_MPID(0x300, 0x0), EFI_ACPI_6_4_GIC_ENABLED, 23,
      0, 0, 0, 25, 0, 0, 0),
    EFI_ACPI_6_4_GICC_STRUCTURE_INIT( // Neoverse Poseidon core4
      0, 4, GET_MPID(0x400, 0x0), EFI_ACPI_6_4_GIC_ENABLED, 23,
      0, 0, 0, 25, 0, 0, 0),
    EFI_ACPI_6_4_GICC_STRUCTURE_INIT( // Neoverse Poseidon core5
      0, 5, GET_MPID(0x500, 0x0), EFI_ACPI_6_4_GIC_ENABLED, 23,
      0, 0, 0, 25, 0, 0, 0),
    EFI_ACPI_6_4_GICC_STRUCTURE_INIT( // Neoverse Poseidon core6
      0, 6, GET_MPID(0x600, 0x0), EFI_ACPI_6_4_GIC_ENABLED, 23,
      0, 0, 0, 25, 0, 0, 0),
    EFI_ACPI_6_4_GICC_STRUCTURE_INIT( // Neoverse Poseidon core7
      0, 7, GET_MPID(0x700, 0x0), EFI_ACPI_6_4_GIC_ENABLED, 23,
      0, 0, 0, 25, 0, 0, 0),

    // Chip 1
    EFI_ACPI_6_4_GICC_STRUCTURE_INIT( // Neoverse Poseidon core0
      0, 8, GET_MPID(0x01000000ULL, 0x0), EFI_ACPI_6_4_GIC_ENABLED, 23,
      0, 0, 0, 25, 0, 0, 0),
    EFI_ACPI_6_4_GICC_STRUCTURE_INIT( // Neoverse Poseidon core1
      0, 9, GET_MPID(0x01000100ULL, 0x0), EFI_ACPI_6_4_GIC_ENABLED, 23,
      0, 0, 0, 25, 0, 0, 0),
    EFI_ACPI_6_4_GICC_STRUCTURE_INIT( // Neoverse Poseidon core2
      0, 10, GET_MPID(0x01000200ULL, 0x0), EFI_ACPI_6_4_GIC_ENABLED, 23,
      0, 0, 0, 25, 0, 0, 0),
    EFI_ACPI_6_4_GICC_STRUCTURE_INIT( // Neoverse Poseidon core3
      0, 11, GET_MPID(0x01000300ULL, 0x0), EFI_ACPI_6_4_GIC_ENABLED, 23,
      0, 0, 0, 25, 0, 0, 0),
    EFI_ACPI_6_4_GICC_STRUCTURE_INIT( // Neoverse Poseidon core4
      0, 12, GET_MPID(0x01000400ULL, 0x0), EFI_ACPI_6_4_GIC_ENABLED, 23,
      0, 0, 0, 25, 0, 0, 0),
    EFI_ACPI_6_4_GICC_STRUCTURE_INIT( // Neoverse Poseidon core5
      0, 13, GET_MPID(0x01000500ULL, 0x0), EFI_ACPI_6_4_GIC_ENABLED, 23,
      0, 0, 0, 25, 0, 0, 0),
    EFI_ACPI_6_4_GICC_STRUCTURE_INIT( // Neoverse Poseidon core6
      0, 14, GET_MPID(0x01000600ULL, 0x0), EFI_ACPI_6_4_GIC_ENABLED, 23,
      0, 0, 0, 25, 0, 0, 0),
    EFI_ACPI_6_4_GICC_STRUCTURE_INIT( // Neoverse Poseidon core7
      0, 15, GET_MPID(0x01000700ULL, 0x0), EFI_ACPI_6_4_GIC_ENABLED, 23,
      0, 0, 0, 25, 0, 0, 0),

    // Chip 2
    EFI_ACPI_6_4_GICC_STRUCTURE_INIT( // Neoverse Poseidon core0
      0, 16, GET_MPID(0x02000000ULL, 0x0), EFI_ACPI_6_4_GIC_ENABLED, 23,
      0, 0, 0, 25, 0, 0, 0),
    EFI_ACPI_6_4_GICC_STRUCTURE_INIT( // Neoverse Poseidon core1
      0, 17, GET_MPID(0x02000100ULL, 0x0), EFI_ACPI_6_4_GIC_ENABLED, 23,
      0, 0, 0, 25, 0, 0, 0),
    EFI_ACPI_6_4_GICC_STRUCTURE_INIT( // Neoverse Poseidon core2
      0, 18, GET_MPID(0x02000200ULL, 0x0), EFI_ACPI_6_4_GIC_ENABLED, 23,
      0, 0, 0, 25, 0, 0, 0),
    EFI_ACPI_6_4_GICC_STRUCTURE_INIT( // Neoverse Poseidon core3
      0, 19, GET_MPID(0x02000300ULL, 0x0), EFI_ACPI_6_4_GIC_ENABLED, 23,
      0, 0, 0, 25, 0, 0, 0),
    EFI_ACPI_6_4_GICC_STRUCTURE_INIT( // Neoverse Poseidon core4
      0, 20, GET_MPID(0x02000400ULL, 0x0), EFI_ACPI_6_4_GIC_ENABLED, 23,
      0, 0, 0, 25, 0, 0, 0),
    EFI_ACPI_6_4_GICC_STRUCTURE_INIT( // Neoverse Poseidon core5
      0, 21, GET_MPID(0x02000500ULL, 0x0), EFI_ACPI_6_4_GIC_ENABLED, 23,
      0, 0, 0, 25, 0, 0, 0),
    EFI_ACPI_6_4_GICC_STRUCTURE_INIT( // Neoverse Poseidon core6
      0, 22, GET_MPID(0x02000600ULL, 0x0), EFI_ACPI_6_4_GIC_ENABLED, 23,
      0, 0, 0, 25, 0, 0, 0),
    EFI_ACPI_6_4_GICC_STRUCTURE_INIT( // Neoverse Poseidon core7
      0, 23, GET_MPID(0x02000700ULL, 0x0), EFI_ACPI_6_4_GIC_ENABLED, 23,
      0, 0, 0, 25, 0, 0, 0),

    // Chip 3
    EFI_ACPI_6_4_GICC_STRUCTURE_INIT( // Neoverse Poseidon core0
      0, 24, GET_MPID(0x03000000ULL, 0x0), EFI_ACPI_6_4_GIC_ENABLED, 23,
      0, 0, 0, 25, 0, 0, 0),
    EFI_ACPI_6_4_GICC_STRUCTURE_INIT( // Neoverse Poseidon core1
      0, 25, GET_MPID(0x03000100ULL, 0x0), EFI_ACPI_6_4_GIC_ENABLED, 23,
      0, 0, 0, 25, 0, 0, 0),
    EFI_ACPI_6_4_GICC_STRUCTURE_INIT( // Neoverse Poseidon core2
      0, 26, GET_MPID(0x03000200ULL, 0x0), EFI_ACPI_6_4_GIC_ENABLED, 23,
      0, 0, 0, 25, 0, 0, 0),
    EFI_ACPI_6_4_GICC_STRUCTURE_INIT( // Neoverse Poseidon core3
      0, 27, GET_MPID(0x03000300ULL, 0x0), EFI_ACPI_6_4_GIC_ENABLED, 23,
      0, 0, 0, 25, 0, 0, 0),
    EFI_ACPI_6_4_GICC_STRUCTURE_INIT( // Neoverse Poseidon core4
      0, 28, GET_MPID(0x03000400ULL, 0x0), EFI_ACPI_6_4_GIC_ENABLED, 23,
      0, 0, 0, 25, 0, 0, 0),
    EFI_ACPI_6_4_GICC_STRUCTURE_INIT( // Neoverse Poseidon core5
      0, 29, GET_MPID(0x03000500ULL, 0x0), EFI_ACPI_6_4_GIC_ENABLED, 23,
      0, 0, 0, 25, 0, 0, 0),
    EFI_ACPI_6_4_GICC_STRUCTURE_INIT( // Neoverse Poseidon core6
      0, 30, GET_MPID(0x03000600ULL, 0x0), EFI_ACPI_6_4_GIC_ENABLED, 23,
      0, 0, 0, 25, 0, 0, 0),
    EFI_ACPI_6_4_GICC_STRUCTURE_INIT( // Neoverse Poseidon core7
      0, 31, GET_MPID(0x03000700ULL, 0x0), EFI_ACPI_6_4_GIC_ENABLED, 23,
      0, 0, 0, 25, 0, 0, 0),
  },
  // GIC Distributor Entry
  EFI_ACPI_6_4_GIC_DISTRIBUTOR_INIT(0, FixedPcdGet32 (PcdGicDistributorBase),
                                    0, 3),
  {
    // GIC Redistributor
    EFI_ACPI_6_4_GIC_REDISTRIBUTOR_INIT(FixedPcdGet32 (PcdGicRedistributorsBase) +
      SGI_REMOTE_CHIP_MEM_OFFSET(0), SIZE_16MB),
    EFI_ACPI_6_4_GIC_REDISTRIBUTOR_INIT(FixedPcdGet32 (PcdGicRedistributorsBase) +
      SGI_REMOTE_CHIP_MEM_OFFSET(1), SIZE_16MB),
    EFI_ACPI_6_4_GIC_REDISTRIBUTOR_INIT(FixedPcdGet32 (PcdGicRedistributorsBase) +
      SGI_REMOTE_CHIP_MEM_OFFSET(2), SIZE_16MB),
    EFI_ACPI_6_4_GIC_REDISTRIBUTOR_INIT(FixedPcdGet32 (PcdGicRedistributorsBase) +
      SGI_REMOTE_CHIP_MEM_OFFSET(3), SIZE_16MB)
  },
  // GIC ITS
  {
    // IOVB0-ITS1
    EFI_ACPI_6_4_GIC_ITS_INIT(0, 0x20080000),
    // IOVB1-ITS2
    EFI_ACPI_6_4_GIC_ITS_INIT(1, 0x200C0000),
    EFI_ACPI_6_4_GIC_ITS_INIT(2, 0x1020080000),
    EFI_ACPI_6_4_GIC_ITS_INIT(3, 0x10200C0000),
    EFI_ACPI_6_4_GIC_ITS_INIT(4, 0x2020080000),
    EFI_ACPI_6_4_GIC_ITS_INIT(5, 0x20200C0000),
    EFI_ACPI_6_4_GIC_ITS_INIT(6, 0x3020080000),
    EFI_ACPI_6_4_GIC_ITS_INIT(7, 0x30200C0000),

    // GPC-ITS0
    EFI_ACPI_6_4_GIC_ITS_INIT(9, 0x20040000),
    EFI_ACPI_6_4_GIC_ITS_INIT(10, 0x1020040000),
    EFI_ACPI_6_4_GIC_ITS_INIT(11, 0x2020040000),
    EFI_ACPI_6_4_GIC_ITS_INIT(12, 0x3020040000),
  },
};

//
// Reference the table being generated to prevent the optimizer from removing
// the data structure from the executable
//
VOID* CONST ReferenceAcpiTable = &Madt;
